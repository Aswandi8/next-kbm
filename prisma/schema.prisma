// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js" 
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  username  String 
  email     String    @unique 
  password  String
  role      String
  photo     String?
  type      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
}

model dataSparepart{
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  sparepart     String    @unique 
  produksi      String
  merek         String?
  stock         Int
  spesifikasi   String
  garansis      garansi[]
  PrMarketings  PrMarketing[]
  dataSurveys   dataSurvey[]
  trackings     tracking[]
  urgents       urgent[]
  penawarans    penawaran[]
  imageUrl      String[] 
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  
}

model garansi{
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  qty           Int    
  nogaransi     String        @unique
  spareparts    dataSparepart @relation(fields: [sparepartId], references: [id])
  sparepartId   String        @db.ObjectId
  ket           String    
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
  
}
model PrMarketing{
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  qty           Int           
  noPR          String        @unique
  spareparts    dataSparepart @relation(fields: [sparepartId], references: [id])
  sparepartId   String        @db.ObjectId
  rekanans      rekanan       @relation(fields: [rekananId], references: [id])
  rekananId     String        @db.ObjectId
  ket           String        
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
  
}
model dataSurvey{
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  qty           Int     
  nosurvey      String        @unique
  spareparts    dataSparepart @relation(fields: [sparepartId], references: [id])
  sparepartId   String        @db.ObjectId
  rekanans      rekanan       @relation(fields: [rekananId], references: [id])
  rekananId     String        @db.ObjectId
  ket           String        
  unit          String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
  
}
model urgent{
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  qty           Int  
  nourgent      String        @unique
  spareparts    dataSparepart @relation(fields: [sparepartId], references: [id])
  sparepartId   String        @db.ObjectId   
  ket           String        
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
  
}
model tracking{
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  notracking    String         @unique
  spareparts    dataSparepart  @relation(fields: [sparepartId], references: [id])
  sparepartId   String         @db.ObjectId
  rekanans      rekanan        @relation(fields: [rekananId], references: [id])
  rekananId     String         @db.ObjectId
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now())
  
}

model penawaran{
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  nopnw         String         @unique
  spareparts    dataSparepart  @relation(fields: [sparepartId], references: [id])
  sparepartId   String         @db.ObjectId
  qty           Int     
  ket           String    
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now())
  
}
model rekanan{
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  nama          String         @unique
  unit           Int
  prmarketings  PrMarketing[]
  trackings     tracking[]
  datasurveys   dataSurvey[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now())
  
}
























// DB Faisal
model dataKost{
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  kost          String
  category      String
  room          String
  description   String?
  location      String?
  imageUrl      String[]
  price         String
  url           String
  penilaians    Penilaian[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
}

model Kriteria{
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  kriteria      String    @unique 
  bobot         Int
  subkriterias  SubKriteria[]
  // penilaians    Penilaian[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
}

model SubKriteria{
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  subkriteria   String    @unique 
  bobot         Int
  kriterias     Kriteria  @relation(fields: [kriteriaId], references: [id])
  kriteriaId    String @db.ObjectId
  // penilaians    Penilaian[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
}

model Penilaian{
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  nilai         Int[]
  sumNilai      Float
  kosts         dataKost   @relation(fields: [kostId], references: [id])
  kostId        String @db.ObjectId
  // kriterias     Kriteria   @relation(fields: [kriteriaId], references: [id])
  // kriteriaId    String @db.ObjectId
  // subKriterias  SubKriteria? @relation(fields: [subkriteriaId], references: [id])
  // subkriteriaId String @db.ObjectId 
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
}